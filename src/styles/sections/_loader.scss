@use "../abstracts" as *;
.loader {
  transition: all $animation-time ease;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  background-color: white;
  z-index: 800;
  @include centerContent;
  &__grid {
    @include grid(3, $gap: 0.6rem);
    grid-template-rows: 1fr 1fr 1fr 1fr;
    justify-items: center;
    position: relative;
    row-gap: 0.2rem;
  }
  &__dot {
    width: 1.8rem;
    height: 1.8rem;
    background-color: white;
    border-radius: 50%;
    border: 3px solid $color-text;

    // transform-style: preserve-3d;
    @include pseudo($loc: after) {
      width: 100%;
      height: 100%;
      background-color: $color-text;

      border-radius: inherit;
      animation: wave 2s ease-out infinite;
      z-index: -100;
      // display: none;
      // transform: translateZ(-1px);
    }
  }
  &__stem {
    background-color: white;
    width: 1rem;
    height: 2rem;
    border: 2.5px solid $color-text;
    @include pos-abs($top: -3.4rem, $left: 55%);
    transform: translate(-50%, 50%);
    // border-radius: 3px;
    border-radius: 10rem 0 10rem 0;
  }
}
.dot1 {
  grid-area: 1 / 1 / 2 / 3;
}
.dot2 {
  grid-area: 1 / 2 / 2 / 4;
}
.dot3 {
  grid-area: 2 / 1 / 3 / 2;
}
.dot4 {
  grid-area: 2 / 2 / 3 / 3;
}
.dot5 {
  grid-area: 2 / 3 / 3 / 4;
}
.dot6 {
  grid-area: 3 / 1 / 4 / 3;
}
.dot7 {
  grid-area: 3 / 2 / 4 / 4;
}
.dot8 {
  grid-area: 4 / 2 / 5 / 3;
}
@keyframes wave {
  50%,
  75% {
    transform: scale(2.1);
    // transform: translateZ(px);
  }

  90%,
  100% {
    opacity: 0;
  }
}

@for $i from 1 through 8 {
  .dot#{$i} {
    &::after {
      animation-delay: $i * 0.2s;
    }
  }
}

.hidden {
  visibility: hidden;
  opacity: 0;
  pointer-events: none;
}
